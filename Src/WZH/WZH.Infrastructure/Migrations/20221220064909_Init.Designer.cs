// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WZH.Infrastructure.DbContext;

namespace WZH.Infrastructure.Migrations
{
    [DbContext(typeof(CodeFirstDbContext))]
    [Migration("20221220064909_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WZH.Domain.Borrow.entity.BorrowDetailsEntity", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasComment("主键Id");

                    b.Property<long>("ArchiveId")
                        .HasColumnType("bigint")
                        .HasComment("文档主键Id");

                    b.Property<long>("BorrowId")
                        .HasColumnType("bigint")
                        .HasComment("借阅主键Id");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("Timestamp")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.HasIndex("BorrowId");

                    b.ToTable("BorrowDetails");

                    b
                        .HasComment("借阅明细表");
                });

            modelBuilder.Entity("WZH.Domain.Borrow.entity.BorrowEntity", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasComment("主键ID");

                    b.Property<string>("ApplyBorrowName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasComment("借阅申请名称");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("datetime")
                        .HasComment("借阅日期");

                    b.Property<string>("BorrowDeptCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("借阅部门");

                    b.Property<string>("BorrowTpye")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BorrowUserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DelDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DelUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDel")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifyUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime")
                        .HasComment("预归还日期");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("Timestamp")
                        .HasComment("版本号");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Borrow");

                    b
                        .HasComment("借阅表");
                });

            modelBuilder.Entity("WZH.Domain.SystemManage.entity.LogEntity", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasComment("主键ID");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreateUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DelDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DelUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDel")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifyUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LogMsg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Logs");

                    b
                        .HasComment("系统日志表");
                });

            modelBuilder.Entity("WZH.Domain.Borrow.entity.BorrowDetailsEntity", b =>
                {
                    b.HasOne("WZH.Domain.Borrow.entity.BorrowEntity", null)
                        .WithMany("borrowDetailsEntities")
                        .HasForeignKey("BorrowId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("WZH.Domain.Borrow.entity.BorrowEntity", b =>
                {
                    b.Navigation("borrowDetailsEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
